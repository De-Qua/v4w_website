"""empty message

Revision ID: 44836151575b
Revises: f1d862df0139
Create Date: 2021-01-18 16:55:38.967767

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '44836151575b'
down_revision = 'f1d862df0139'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Feedbacks')
    op.drop_table('flask_usage')
    op.drop_table('Ideas')
    op.drop_table('roles_users')
    op.drop_table('Errors')
    op.drop_table('roles')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=True),
    sa.Column('password', sa.VARCHAR(length=80), nullable=True),
    sa.Column('active', sa.BOOLEAN(), nullable=True),
    sa.Column('confirmed_at', sa.DATETIME(), nullable=True),
    sa.Column('has_token', sa.BOOLEAN(), nullable=True),
    sa.Column('token_expiration', sa.DATETIME(), nullable=True),
    sa.CheckConstraint('active IN (0, 1)', name='ck_users_active'),
    sa.CheckConstraint('has_token IN (0, 1)', name='ck_users_has_token'),
    sa.PrimaryKeyConstraint('id', name='pk_users'),
    sa.UniqueConstraint('email', name='uq_users_email')
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_roles'),
    sa.UniqueConstraint('name', name='uq_roles_name')
    )
    op.create_table('Errors',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('version', sa.VARCHAR(length=16), nullable=True),
    sa.Column('datetime', sa.DATETIME(), nullable=True),
    sa.Column('error_type', sa.VARCHAR(length=256), nullable=True),
    sa.Column('error_message', sa.VARCHAR(length=256), nullable=True),
    sa.Column('url', sa.VARCHAR(length=256), nullable=True),
    sa.Column('method', sa.VARCHAR(length=256), nullable=True),
    sa.Column('browser', sa.VARCHAR(length=256), nullable=True),
    sa.Column('pickle', sa.VARCHAR(length=256), nullable=True),
    sa.Column('report', sa.VARCHAR(length=256), nullable=True),
    sa.Column('solved', sa.BOOLEAN(), nullable=True),
    sa.CheckConstraint('solved IN (0, 1)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_users',
    sa.Column('users_id', sa.INTEGER(), nullable=True),
    sa.Column('roles_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['roles_id'], ['roles.id'], name='fk_roles_users_roles_id_roles'),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], name='fk_roles_users_users_id_users')
    )
    op.create_table('Ideas',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('idea_title', sa.VARCHAR(length=128), nullable=True),
    sa.Column('idea_short_description', sa.VARCHAR(length=256), nullable=True),
    sa.Column('num_of_votes', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flask_usage',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('url', sa.VARCHAR(length=128), nullable=True),
    sa.Column('ua_browser', sa.VARCHAR(length=16), nullable=True),
    sa.Column('ua_language', sa.VARCHAR(length=16), nullable=True),
    sa.Column('ua_platform', sa.VARCHAR(length=16), nullable=True),
    sa.Column('ua_version', sa.VARCHAR(length=16), nullable=True),
    sa.Column('blueprint', sa.VARCHAR(length=16), nullable=True),
    sa.Column('view_args', sa.VARCHAR(length=64), nullable=True),
    sa.Column('status', sa.INTEGER(), nullable=True),
    sa.Column('remote_addr', sa.VARCHAR(length=24), nullable=True),
    sa.Column('xforwardedfor', sa.VARCHAR(length=24), nullable=True),
    sa.Column('authorization', sa.BOOLEAN(), nullable=True),
    sa.Column('ip_info', sa.VARCHAR(length=1024), nullable=True),
    sa.Column('path', sa.VARCHAR(length=32), nullable=True),
    sa.Column('speed', sa.FLOAT(), nullable=True),
    sa.Column('datetime', sa.DATETIME(), nullable=True),
    sa.Column('username', sa.VARCHAR(length=128), nullable=True),
    sa.Column('track_var', sa.VARCHAR(length=128), nullable=True),
    sa.CheckConstraint('authorization IN (0, 1)', name='ck_flask_usage_authorization'),
    sa.PrimaryKeyConstraint('id', name='pk_flask_usage')
    )
    op.create_table('Feedbacks',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('version', sa.VARCHAR(length=16), nullable=True),
    sa.Column('datetime', sa.DATETIME(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=128), nullable=True),
    sa.Column('email', sa.VARCHAR(length=128), nullable=True),
    sa.Column('category', sa.VARCHAR(length=256), nullable=True),
    sa.Column('searched_string', sa.VARCHAR(length=128), nullable=True),
    sa.Column('searched_start', sa.VARCHAR(length=128), nullable=True),
    sa.Column('searched_end', sa.VARCHAR(length=128), nullable=True),
    sa.Column('found_string', sa.VARCHAR(length=128), nullable=True),
    sa.Column('found_start', sa.VARCHAR(length=128), nullable=True),
    sa.Column('found_end', sa.VARCHAR(length=128), nullable=True),
    sa.Column('feedback', sa.VARCHAR(length=512), nullable=True),
    sa.Column('json', sa.VARCHAR(), nullable=True),
    sa.Column('start_coord', sa.VARCHAR(), nullable=True),
    sa.Column('end_coord', sa.VARCHAR(), nullable=True),
    sa.Column('report', sa.VARCHAR(length=256), nullable=True),
    sa.Column('solved', sa.BOOLEAN(), nullable=True),
    sa.CheckConstraint('solved IN (0, 1)'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def upgrade_trackusage():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_trackusage():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_users():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('has_token', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('token_expiration', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade_users():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('token_expiration')
        batch_op.drop_column('has_token')

    # ### end Alembic commands ###


def upgrade_ideas():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_ideas():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_feed_err():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_feed_err():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

