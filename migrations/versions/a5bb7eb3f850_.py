"""empty message

Revision ID: a5bb7eb3f850
Revises: c5609e3b14d4
Create Date: 2021-01-22 20:06:49.906064

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a5bb7eb3f850'
down_revision = 'c5609e3b14d4'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_trackusage():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_trackusage():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_users():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('path', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_apis')),
    sa.UniqueConstraint('name')
    )
    op.create_table('token_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_token_types')),
    sa.UniqueConstraint('type')
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=500), nullable=True),
    sa.Column('jti', sa.String(length=36), nullable=True),
    sa.Column('token_type_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['token_type_id'], ['token_types.id'], name=op.f('fk_tokens_token_type_id_token_types')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tokens'))
    )
    op.create_table('types_apis',
    sa.Column('token_types_id', sa.Integer(), nullable=True),
    sa.Column('apis_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['apis_id'], ['apis.id'], name=op.f('fk_types_apis_apis_id_apis')),
    sa.ForeignKeyConstraint(['token_types_id'], ['token_types.id'], name=op.f('fk_types_apis_token_types_id_token_types'))
    )
    op.create_table('token_api_counters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token_id', sa.Integer(), nullable=False),
    sa.Column('api_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['api_id'], ['apis.id'], name=op.f('fk_token_api_counters_api_id_apis')),
    sa.ForeignKeyConstraint(['token_id'], ['tokens.id'], name=op.f('fk_token_api_counters_token_id_tokens')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_token_api_counters'))
    )
    op.drop_table('token')
    op.drop_table('token_api_counter')
    op.drop_table('token_type')
    # ### end Alembic commands ###


def downgrade_users():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('token_type',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_token_type'),
    sa.UniqueConstraint('type', name='uq_token_type_type')
    )
    op.create_table('token_api_counter',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('token_id', sa.INTEGER(), nullable=False),
    sa.Column('api1', sa.INTEGER(), nullable=True),
    sa.Column('api2', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['token_id'], ['token.id'], name='fk_token_api_counter_token_id_token'),
    sa.PrimaryKeyConstraint('id', name='pk_token_api_counter')
    )
    op.create_table('token',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('token', sa.VARCHAR(length=500), nullable=True),
    sa.Column('jti', sa.VARCHAR(length=36), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('revoked', sa.BOOLEAN(), nullable=True),
    sa.Column('expires', sa.DATETIME(), nullable=True),
    sa.Column('token_type_id', sa.INTEGER(), nullable=False),
    sa.CheckConstraint('revoked IN (0, 1)'),
    sa.ForeignKeyConstraint(['token_type_id'], ['token_type.id'], name='fk_token_token_type_id_token_type'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_token_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_token')
    )
    op.drop_table('token_api_counters')
    op.drop_table('types_apis')
    op.drop_table('tokens')
    op.drop_table('token_types')
    op.drop_table('apis')
    # ### end Alembic commands ###


def upgrade_ideas():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_ideas():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_feed_err():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_feed_err():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

