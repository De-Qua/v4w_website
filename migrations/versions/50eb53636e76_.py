"""empty message

Revision ID: 50eb53636e76
Revises:
Create Date: 2021-06-15 11:40:39.566201

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2

# revision identifiers, used by Alembic.
revision = '50eb53636e76'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=16), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=True),
    sa.Column('error_type', sa.String(length=256), nullable=True),
    sa.Column('error_message', sa.String(length=256), nullable=True),
    sa.Column('url', sa.String(length=256), nullable=True),
    sa.Column('method', sa.String(length=256), nullable=True),
    sa.Column('browser', sa.String(length=256), nullable=True),
    sa.Column('pickle', sa.String(length=256), nullable=True),
    sa.Column('report', sa.String(length=256), nullable=True),
    sa.Column('solved', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Errors'))
    )
    op.create_table('Feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=16), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('category', sa.String(length=256), nullable=True),
    sa.Column('searched_string', sa.String(length=128), nullable=True),
    sa.Column('searched_start', sa.String(length=128), nullable=True),
    sa.Column('searched_end', sa.String(length=128), nullable=True),
    sa.Column('found_string', sa.String(length=128), nullable=True),
    sa.Column('found_start', sa.String(length=128), nullable=True),
    sa.Column('found_end', sa.String(length=128), nullable=True),
    sa.Column('feedback', sa.String(length=512), nullable=True),
    sa.Column('json', sa.String(), nullable=True),
    sa.Column('start_coord', sa.String(), nullable=True),
    sa.Column('end_coord', sa.String(), nullable=True),
    sa.Column('report', sa.String(length=256), nullable=True),
    sa.Column('solved', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Feedbacks'))
    )
    op.create_table('Ideas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idea_title', sa.String(length=128), nullable=True),
    sa.Column('idea_short_description', sa.String(length=256), nullable=True),
    sa.Column('num_of_votes', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Ideas'))
    )
    op.create_table('apis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('path', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_apis')),
    sa.UniqueConstraint('name', name=op.f('uq_apis_name'))
    )
    op.create_table('area',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('shape', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_area'))
    )
    op.create_index(op.f('ix_area_name'), 'area', ['name'], unique=False)
    op.create_table('error_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_error_groups')),
    sa.UniqueConstraint('name', name=op.f('uq_error_groups_name'))
    )
    op.create_table('flask_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=128), nullable=True),
    sa.Column('ua_browser', sa.String(length=16), nullable=True),
    sa.Column('ua_language', sa.String(length=16), nullable=True),
    sa.Column('ua_platform', sa.String(length=16), nullable=True),
    sa.Column('ua_version', sa.String(length=16), nullable=True),
    sa.Column('blueprint', sa.String(length=16), nullable=True),
    sa.Column('view_args', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('remote_addr', sa.String(length=24), nullable=True),
    sa.Column('xforwardedfor', sa.String(length=24), nullable=True),
    sa.Column('authorization', sa.Boolean(), nullable=True),
    sa.Column('ip_info', sa.String(length=1024), nullable=True),
    sa.Column('path', sa.String(length=32), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=128), nullable=True),
    sa.Column('track_var', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_flask_usage'))
    )
    op.create_table('languages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('code', sa.String(length=5), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_languages')),
    sa.UniqueConstraint('code', name=op.f('uq_languages_code')),
    sa.UniqueConstraint('name', name=op.f('uq_languages_name'))
    )
    op.create_table('neighborhood',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('zipcode', sa.Integer(), nullable=False),
    sa.Column('shape', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_neighborhood'))
    )
    op.create_index(op.f('ix_neighborhood_name'), 'neighborhood', ['name'], unique=False)
    op.create_table('poi_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_poi_category'))
    )
    op.create_index(op.f('ix_poi_category_name'), 'poi_category', ['name'], unique=True)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('name', name=op.f('uq_roles_name'))
    )
    op.create_table('street',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('name_alt', sa.String(length=64), nullable=True),
    sa.Column('name_spe', sa.String(length=64), nullable=True),
    sa.Column('name_den', sa.String(length=64), nullable=True),
    sa.Column('shape', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON'), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.CheckConstraint('score >= 0 AND score <= 100', name='check_score'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_street'))
    )
    op.create_index(op.f('ix_street_name'), 'street', ['name'], unique=False)
    op.create_index(op.f('ix_street_name_alt'), 'street', ['name_alt'], unique=False)
    op.create_index(op.f('ix_street_name_den'), 'street', ['name_den'], unique=False)
    op.create_index(op.f('ix_street_name_spe'), 'street', ['name_spe'], unique=False)
    op.create_table('token_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_token_types')),
    sa.UniqueConstraint('type', name=op.f('uq_token_types_type'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=80), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('error_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['error_groups.id'], name=op.f('fk_error_codes_group_id_error_groups')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_error_codes')),
    sa.UniqueConstraint('code', name=op.f('uq_error_codes_code'))
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('street_id', sa.Integer(), nullable=True),
    sa.Column('neighborhood_id', sa.Integer(), nullable=False),
    sa.Column('shape', geoalchemy2.types.Geometry(geometry_type='POINT'), nullable=False),
    sa.ForeignKeyConstraint(['neighborhood_id'], ['neighborhood.id'], name=op.f('fk_location_neighborhood_id_neighborhood')),
    sa.ForeignKeyConstraint(['street_id'], ['street.id'], name=op.f('fk_location_street_id_street')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_location'))
    )
    op.create_index(op.f('ix_location_latitude'), 'location', ['latitude'], unique=False)
    op.create_index(op.f('ix_location_longitude'), 'location', ['longitude'], unique=False)
    op.create_table('poi_category_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('subtype', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['poi_category.id'], name=op.f('fk_poi_category_type_category_id_poi_category')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_poi_category_type'))
    )
    op.create_index(op.f('ix_poi_category_type_name'), 'poi_category_type', ['name'], unique=False)
    op.create_index(op.f('ix_poi_category_type_subtype'), 'poi_category_type', ['subtype'], unique=False)
    op.create_table('roles_users',
    sa.Column('users_id', sa.Integer(), nullable=True),
    sa.Column('roles_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['roles_id'], ['roles.id'], name=op.f('fk_roles_users_roles_id_roles')),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], name=op.f('fk_roles_users_users_id_users'))
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=500), nullable=True),
    sa.Column('jti', sa.String(length=36), nullable=True),
    sa.Column('token_type_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['token_type_id'], ['token_types.id'], name=op.f('fk_tokens_token_type_id_token_types')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tokens'))
    )
    op.create_table('types_apis',
    sa.Column('token_types_id', sa.Integer(), nullable=True),
    sa.Column('apis_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['apis_id'], ['apis.id'], name=op.f('fk_types_apis_apis_id_apis')),
    sa.ForeignKeyConstraint(['token_types_id'], ['token_types.id'], name=op.f('fk_types_apis_token_types_id_token_types'))
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('housenumber', sa.Integer(), nullable=False),
    sa.Column('housenumber_sub', sa.String(length=1), nullable=True),
    sa.Column('address_neigh', sa.String(length=64), nullable=True),
    sa.Column('address_street', sa.String(length=128), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name=op.f('fk_address_location_id_location')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_address'))
    )
    op.create_index(op.f('ix_address_address_neigh'), 'address', ['address_neigh'], unique=False)
    op.create_index(op.f('ix_address_address_street'), 'address', ['address_street'], unique=False)
    op.create_table('error_translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code_id', sa.Integer(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['code_id'], ['error_codes.id'], name=op.f('fk_error_translations_code_id_error_codes')),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], name=op.f('fk_error_translations_language_id_languages')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_error_translations'))
    )
    op.create_table('poi',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('name_alt', sa.String(length=128), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('categorytype_id', sa.Integer(), nullable=True),
    sa.Column('opening_hours', sa.String(length=256), nullable=True),
    sa.Column('wheelchair', sa.String(length=8), nullable=True),
    sa.Column('toilets', sa.Boolean(), nullable=True),
    sa.Column('toilets_wheelchair', sa.Boolean(), nullable=True),
    sa.Column('wikipedia', sa.String(length=128), nullable=True),
    sa.Column('atm', sa.Boolean(), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('last_change', sa.DateTime(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('osm_type', sa.String(length=8), nullable=True),
    sa.Column('osm_id', sa.Integer(), nullable=True),
    sa.Column('osm_other_tags', sa.String(), nullable=True),
    sa.CheckConstraint('score >= 0 AND score <= 100', name='check_score'),
    sa.ForeignKeyConstraint(['categorytype_id'], ['poi_category_type.id'], name=op.f('fk_poi_categorytype_id_poi_category_type')),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name=op.f('fk_poi_location_id_location')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_poi'))
    )
    op.create_index(op.f('ix_poi_name'), 'poi', ['name'], unique=False)
    op.create_index(op.f('ix_poi_name_alt'), 'poi', ['name_alt'], unique=False)
    op.create_table('token_api_counters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token_id', sa.Integer(), nullable=False),
    sa.Column('api_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['api_id'], ['apis.id'], name=op.f('fk_token_api_counters_api_id_apis')),
    sa.ForeignKeyConstraint(['token_id'], ['tokens.id'], name=op.f('fk_token_api_counters_token_id_tokens')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_token_api_counters'))
    )
    op.create_table('poi_types',
    sa.Column('poi_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['poi_id'], ['poi.id'], name=op.f('fk_poi_types_poi_id_poi')),
    sa.ForeignKeyConstraint(['type_id'], ['poi_category_type.id'], name=op.f('fk_poi_types_type_id_poi_category_type')),
    sa.PrimaryKeyConstraint('poi_id', 'type_id', name=op.f('pk_poi_types'))
    )
    # op.drop_table('spatial_ref_sys')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.drop_table('poi_types')
    op.drop_table('token_api_counters')
    op.drop_index(op.f('ix_poi_name_alt'), table_name='poi')
    op.drop_index(op.f('ix_poi_name'), table_name='poi')
    op.drop_table('poi')
    op.drop_table('error_translations')
    op.drop_index(op.f('ix_address_address_street'), table_name='address')
    op.drop_index(op.f('ix_address_address_neigh'), table_name='address')
    op.drop_table('address')
    op.drop_table('types_apis')
    op.drop_table('tokens')
    op.drop_table('roles_users')
    op.drop_index(op.f('ix_poi_category_type_subtype'), table_name='poi_category_type')
    op.drop_index(op.f('ix_poi_category_type_name'), table_name='poi_category_type')
    op.drop_table('poi_category_type')
    op.drop_index(op.f('ix_location_longitude'), table_name='location')
    op.drop_index(op.f('ix_location_latitude'), table_name='location')
    op.drop_table('location')
    op.drop_table('error_codes')
    op.drop_table('users')
    op.drop_table('token_types')
    op.drop_index(op.f('ix_street_name_spe'), table_name='street')
    op.drop_index(op.f('ix_street_name_den'), table_name='street')
    op.drop_index(op.f('ix_street_name_alt'), table_name='street')
    op.drop_index(op.f('ix_street_name'), table_name='street')
    op.drop_table('street')
    op.drop_table('roles')
    op.drop_index(op.f('ix_poi_category_name'), table_name='poi_category')
    op.drop_table('poi_category')
    op.drop_index(op.f('ix_neighborhood_name'), table_name='neighborhood')
    op.drop_table('neighborhood')
    op.drop_table('languages')
    op.drop_table('flask_usage')
    op.drop_table('error_groups')
    op.drop_index(op.f('ix_area_name'), table_name='area')
    op.drop_table('area')
    op.drop_table('apis')
    op.drop_table('Ideas')
    op.drop_table('Feedbacks')
    op.drop_table('Errors')
    # ### end Alembic commands ###
